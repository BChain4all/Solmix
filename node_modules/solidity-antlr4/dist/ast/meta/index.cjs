"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  metaNodeTypes: true
};
exports.metaNodeTypes = void 0;
var nodeMap = _interopRequireWildcard(require("./index.node.cjs"));
var _dataLocation = require("./data-location.cjs");
Object.keys(_dataLocation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _dataLocation[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _dataLocation[key];
    }
  });
});
var _identifierPath = require("./identifier-path.cjs");
Object.keys(_identifierPath).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _identifierPath[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _identifierPath[key];
    }
  });
});
var _importAliases = require("./import-aliases.cjs");
Object.keys(_importAliases).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _importAliases[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _importAliases[key];
    }
  });
});
var _importDirective = require("./import-directive.cjs");
Object.keys(_importDirective).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _importDirective[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _importDirective[key];
    }
  });
});
var _inheritanceSpecifierList = require("./inheritance-specifier-list.cjs");
Object.keys(_inheritanceSpecifierList).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _inheritanceSpecifierList[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inheritanceSpecifierList[key];
    }
  });
});
var _inheritanceSpecifier = require("./inheritance-specifier.cjs");
Object.keys(_inheritanceSpecifier).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _inheritanceSpecifier[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inheritanceSpecifier[key];
    }
  });
});
var _modifierInvocation = require("./modifier-invocation.cjs");
Object.keys(_modifierInvocation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _modifierInvocation[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _modifierInvocation[key];
    }
  });
});
var _overrideSpecifier = require("./override-specifier.cjs");
Object.keys(_overrideSpecifier).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _overrideSpecifier[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _overrideSpecifier[key];
    }
  });
});
var _parameterList = require("./parameter-list.cjs");
Object.keys(_parameterList).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _parameterList[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _parameterList[key];
    }
  });
});
var _path = require("./path.cjs");
Object.keys(_path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _path[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _path[key];
    }
  });
});
var _pragmaDirective = require("./pragma-directive.cjs");
Object.keys(_pragmaDirective).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _pragmaDirective[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _pragmaDirective[key];
    }
  });
});
var _sourceUnit = require("./source-unit.cjs");
Object.keys(_sourceUnit).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _sourceUnit[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _sourceUnit[key];
    }
  });
});
var _symbolAliases = require("./symbol-aliases.cjs");
Object.keys(_symbolAliases).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _symbolAliases[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _symbolAliases[key];
    }
  });
});
var _usingAliases = require("./using-aliases.cjs");
Object.keys(_usingAliases).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _usingAliases[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _usingAliases[key];
    }
  });
});
var _usingDirective = require("./using-directive.cjs");
Object.keys(_usingDirective).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _usingDirective[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _usingDirective[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const metaNodeTypes = exports.metaNodeTypes = Object.keys(nodeMap);
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  expressionNodeTypes: true
};
exports.expressionNodeTypes = void 0;
var nodeMap = _interopRequireWildcard(require("./index.node.cjs"));
var _assignOp = require("./assign-op.cjs");
Object.keys(_assignOp).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _assignOp[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assignOp[key];
    }
  });
});
var _assignment = require("./assignment.cjs");
Object.keys(_assignment).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _assignment[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assignment[key];
    }
  });
});
var _binaryOperation = require("./binary-operation.cjs");
Object.keys(_binaryOperation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _binaryOperation[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _binaryOperation[key];
    }
  });
});
var _booleanLiteral = require("./boolean-literal.cjs");
Object.keys(_booleanLiteral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _booleanLiteral[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _booleanLiteral[key];
    }
  });
});
var _callArgumentList = require("./call-argument-list.cjs");
Object.keys(_callArgumentList).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _callArgumentList[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _callArgumentList[key];
    }
  });
});
var _conditional = require("./conditional.cjs");
Object.keys(_conditional).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _conditional[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _conditional[key];
    }
  });
});
var _expression = require("./expression.cjs");
Object.keys(_expression).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _expression[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _expression[key];
    }
  });
});
var _functionCallOptions = require("./function-call-options.cjs");
Object.keys(_functionCallOptions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _functionCallOptions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _functionCallOptions[key];
    }
  });
});
var _functionCall = require("./function-call.cjs");
Object.keys(_functionCall).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _functionCall[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _functionCall[key];
    }
  });
});
var _hexStringLiteral = require("./hex-string-literal.cjs");
Object.keys(_hexStringLiteral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _hexStringLiteral[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _hexStringLiteral[key];
    }
  });
});
var _identifier = require("./identifier.cjs");
Object.keys(_identifier).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _identifier[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _identifier[key];
    }
  });
});
var _indexAccess = require("./index-access.cjs");
Object.keys(_indexAccess).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _indexAccess[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexAccess[key];
    }
  });
});
var _indexRangeAccess = require("./index-range-access.cjs");
Object.keys(_indexRangeAccess).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _indexRangeAccess[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _indexRangeAccess[key];
    }
  });
});
var _inlineArrayExpression = require("./inline-array-expression.cjs");
Object.keys(_inlineArrayExpression).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _inlineArrayExpression[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inlineArrayExpression[key];
    }
  });
});
var _inlineArray = require("./inline-array.cjs");
Object.keys(_inlineArray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _inlineArray[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _inlineArray[key];
    }
  });
});
var _literal = require("./literal.cjs");
Object.keys(_literal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _literal[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _literal[key];
    }
  });
});
var _memberAccess = require("./member-access.cjs");
Object.keys(_memberAccess).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _memberAccess[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _memberAccess[key];
    }
  });
});
var _metaType = require("./meta-type.cjs");
Object.keys(_metaType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _metaType[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _metaType[key];
    }
  });
});
var _namedArgument = require("./named-argument.cjs");
Object.keys(_namedArgument).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _namedArgument[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _namedArgument[key];
    }
  });
});
var _newExpr = require("./new-expr.cjs");
Object.keys(_newExpr).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _newExpr[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _newExpr[key];
    }
  });
});
var _numberLiteral = require("./number-literal.cjs");
Object.keys(_numberLiteral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _numberLiteral[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _numberLiteral[key];
    }
  });
});
var _payableConversion = require("./payable-conversion.cjs");
Object.keys(_payableConversion).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _payableConversion[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _payableConversion[key];
    }
  });
});
var _primaryExpression = require("./primary-expression.cjs");
Object.keys(_primaryExpression).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _primaryExpression[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _primaryExpression[key];
    }
  });
});
var _stringLiteral = require("./string-literal.cjs");
Object.keys(_stringLiteral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _stringLiteral[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _stringLiteral[key];
    }
  });
});
var _tupleExpression = require("./tuple-expression.cjs");
Object.keys(_tupleExpression).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _tupleExpression[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tupleExpression[key];
    }
  });
});
var _tuple = require("./tuple.cjs");
Object.keys(_tuple).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _tuple[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tuple[key];
    }
  });
});
var _unaryOperation = require("./unary-operation.cjs");
Object.keys(_unaryOperation).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _unaryOperation[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _unaryOperation[key];
    }
  });
});
var _unicodeStringLiteral = require("./unicode-string-literal.cjs");
Object.keys(_unicodeStringLiteral).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _unicodeStringLiteral[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _unicodeStringLiteral[key];
    }
  });
});
var _userDefinableOperator = require("./user-definable-operator.cjs");
Object.keys(_userDefinableOperator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _userDefinableOperator[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _userDefinableOperator[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const expressionNodeTypes = exports.expressionNodeTypes = Object.keys(nodeMap);
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  typeNodeTypes: true
};
exports.typeNodeTypes = void 0;
var nodeMap = _interopRequireWildcard(require("./index.node.cjs"));
var _elementaryTypeName = require("./elementary-type-name.cjs");
Object.keys(_elementaryTypeName).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _elementaryTypeName[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _elementaryTypeName[key];
    }
  });
});
var _functionTypeName = require("./function-type-name.cjs");
Object.keys(_functionTypeName).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _functionTypeName[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _functionTypeName[key];
    }
  });
});
var _mappingKeyType = require("./mapping-key-type.cjs");
Object.keys(_mappingKeyType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _mappingKeyType[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mappingKeyType[key];
    }
  });
});
var _mappingType = require("./mapping-type.cjs");
Object.keys(_mappingType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _mappingType[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _mappingType[key];
    }
  });
});
var _typeName = require("./type-name.cjs");
Object.keys(_typeName).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _typeName[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _typeName[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const typeNodeTypes = exports.typeNodeTypes = Object.keys(nodeMap);
import { BaseNodeString } from "../base.js";
class TypeNameWithArray extends BaseNodeString {
  type = "TypeName";
  baseType;
  expression;
  constructor(ctx, visitor) {
    super(ctx, visitor);
    const target = [
      ctx.elementaryTypeName(),
      ctx.functionTypeName(),
      ctx.mappingType(),
      ctx.identifierPath(),
      ctx.typeName()
    ].find(Boolean);
    if (!ctx.LBrack()) {
      return target.accept(visitor);
    }
    this.name = ctx.getText();
    this.baseType = target.accept(visitor);
    this.expression = ctx.expression()?.accept(visitor) ?? null;
  }
}
export const TypeName = TypeNameWithArray;

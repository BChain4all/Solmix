"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  statementNodeTypes: true
};
exports.statementNodeTypes = void 0;
var nodeMap = _interopRequireWildcard(require("./index.node.cjs"));
var _assemblyFlags = require("./assembly-flags.cjs");
Object.keys(_assemblyFlags).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _assemblyFlags[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assemblyFlags[key];
    }
  });
});
var _assemblyStatement = require("./assembly-statement.cjs");
Object.keys(_assemblyStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _assemblyStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _assemblyStatement[key];
    }
  });
});
var _block = require("./block.cjs");
Object.keys(_block).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _block[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _block[key];
    }
  });
});
var _breakStatement = require("./break-statement.cjs");
Object.keys(_breakStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _breakStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _breakStatement[key];
    }
  });
});
var _catchClause = require("./catch-clause.cjs");
Object.keys(_catchClause).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _catchClause[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _catchClause[key];
    }
  });
});
var _continueStatement = require("./continue-statement.cjs");
Object.keys(_continueStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _continueStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _continueStatement[key];
    }
  });
});
var _doWhileStatement = require("./do-while-statement.cjs");
Object.keys(_doWhileStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _doWhileStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _doWhileStatement[key];
    }
  });
});
var _emitStatement = require("./emit-statement.cjs");
Object.keys(_emitStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _emitStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _emitStatement[key];
    }
  });
});
var _expressionStatement = require("./expression-statement.cjs");
Object.keys(_expressionStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _expressionStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _expressionStatement[key];
    }
  });
});
var _forStatement = require("./for-statement.cjs");
Object.keys(_forStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _forStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _forStatement[key];
    }
  });
});
var _ifStatement = require("./if-statement.cjs");
Object.keys(_ifStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _ifStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ifStatement[key];
    }
  });
});
var _returnStatement = require("./return-statement.cjs");
Object.keys(_returnStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _returnStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _returnStatement[key];
    }
  });
});
var _revertStatement = require("./revert-statement.cjs");
Object.keys(_revertStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _revertStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _revertStatement[key];
    }
  });
});
var _simpleStatement = require("./simple-statement.cjs");
Object.keys(_simpleStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _simpleStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _simpleStatement[key];
    }
  });
});
var _statement = require("./statement.cjs");
Object.keys(_statement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _statement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _statement[key];
    }
  });
});
var _tryStatement = require("./try-statement.cjs");
Object.keys(_tryStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _tryStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _tryStatement[key];
    }
  });
});
var _variableDeclarationStatement = require("./variable-declaration-statement.cjs");
Object.keys(_variableDeclarationStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _variableDeclarationStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _variableDeclarationStatement[key];
    }
  });
});
var _whileStatement = require("./while-statement.cjs");
Object.keys(_whileStatement).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _whileStatement[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _whileStatement[key];
    }
  });
});
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const statementNodeTypes = exports.statementNodeTypes = Object.keys(nodeMap);
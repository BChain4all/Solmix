import { BaseNode } from '../base';
import { VariableDeclarationContext, SolidityParserVisitor, ParameterDeclarationContext, StateVariableDeclarationContext, ConstantVariableDeclarationContext, EventParameterContext, ErrorParameterContext } from '../../antlr4';
import { Identifier } from '../expression';
import { DataLocation } from '../meta';
import { TypeName } from '../type';
import { Expression } from '../expression';
import { OverrideSpecifier } from '../meta';
export declare class VariableDeclaration extends BaseNode {
    type: "VariableDeclaration";
    name: Identifier | null;
    typeName: TypeName;
    dataLocation: DataLocation | null;
    stateVariable: boolean;
    parameter: boolean;
    public: boolean;
    private: boolean;
    internal: boolean;
    constant: boolean;
    immutable: boolean;
    indexed: boolean;
    override: OverrideSpecifier | null;
    expression: Expression | null;
    constructor(ctx: VariableDeclarationContext | ParameterDeclarationContext | StateVariableDeclarationContext | ConstantVariableDeclarationContext | ErrorParameterContext | EventParameterContext, visitor: SolidityParserVisitor<any>);
}
export { VariableDeclaration as ParameterDeclaration, VariableDeclaration as StateVariableDeclaration, VariableDeclaration as ConstantVariableDeclaration, VariableDeclaration as ErrorParameter, VariableDeclaration as EventParameter, };

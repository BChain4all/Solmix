POST http://localhost:8000/api/v1/get-vulnerability
Content-Type: application/json

{
    "code": "pragma solidity ^0.8.27;\n\nimport {Governor} from \"@openzeppelin/contracts/governance/Governor.sol\";\nimport {GovernorCountingSimple} from \"@openzeppelin/contracts/governance/extensions/GovernorCountingSimple.sol\";\nimport {GovernorSettings} from \"@openzeppelin/contracts/governance/extensions/GovernorSettings.sol\";\nimport {GovernorTimelockControl} from \"@openzeppelin/contracts/governance/extensions/GovernorTimelockControl.sol\";\nimport {GovernorVotes} from \"@openzeppelin/contracts/governance/extensions/GovernorVotes.sol\";\nimport {GovernorVotesQuorumFraction} from \"@openzeppelin/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\";\nimport {IVotes} from \"@openzeppelin/contracts/governance/utils/IVotes.sol\";\nimport {TimelockController} from \"@openzeppelin/contracts/governance/TimelockController.sol\";\n\n\ncontract MyGovernor is Governor, GovernorSettings, GovernorCountingSimple, GovernorVotes, GovernorVotesQuorumFraction, GovernorTimelockControl {\n\nconstructor(IVotes _token, TimelockController _timelock)\nGovernor(\" MyGovernor \")\nGovernorSettings(1, 1, 0)\nGovernorVotes(_token)\nGovernorVotesQuorumFraction( 4)\nGovernorTimelockControl(_timelock)\n{}\n\nfunction state(uint256 proposalId)\npublic\nview\noverride(Governor, GovernorTimelockControl)\nreturns (ProposalState)\n{\nreturn super.state(proposalId);\n}\nfunction proposalNeedsQueuing(uint256 proposalId)\npublic\nview\noverride(Governor, GovernorTimelockControl)\nreturns (bool)\n{\nreturn super.proposalNeedsQueuing(proposalId);\n}\nfunction proposalThreshold()\npublic\nview\noverride(Governor, GovernorSettings)\nreturns (uint256)\n{\nreturn super.proposalThreshold();\n}\nfunction _queueOperations(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)\ninternal\noverride(Governor, GovernorTimelockControl)\nreturns (uint48)\n{\nreturn super._queueOperations(proposalId, targets, values, calldatas, descriptionHash);\n}\n\n\nfunction _executeOperations(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)\ninternal\noverride(Governor, GovernorTimelockControl)\n{\nreturn super._executeOperations(proposalId, targets, values, calldatas, descriptionHash);\n}\n\n\nfunction _cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)\ninternal\noverride(Governor, GovernorTimelockControl)\nreturns (uint256)\n{\nreturn super._cancel(targets, values, calldatas, descriptionHash);\n}\n\n\nfunction _executor()\ninternal\nview\noverride(Governor, GovernorTimelockControl)\nreturns (address)\n{\nreturn super._executor();\n}\n\n\n}"
}